@page
@model LoginModel
@{ 
    Layout = "_AccountLayout";
}

<div class="bg-primary text-center text-white p-2"><h4>Log In</h4></div>
    
<div class="m-1 text-danger" asp-validation-summary="All"></div>

<form method="post">
    <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
    <div class="form-group">
        <label>User Name</label>
        <input class="form-control" asp-for="UserName" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <input class="form-control" asp-for="Password" type="password" />
    </div>
    <button class="btn btn-primary" type="submit">Log In</button>
</form>

@functions {
    public class LoginModel: AccountPageModel
    {
        private SignInManager<IdentityUser> signInManager;
        public LoginModel (SignInManager<IdentityUser> signInManager)
        {
            this.signInManager = signInManager;
        }

        [BindProperty][Required]
        public string UserName { get; set; }
        [BindProperty][Required]
        public string Password { get; set; }
        [BindProperty(SupportsGet=true)]
        public string ReturnUrl { get; set; }
        public async Task<IActionResult> OnPostAsync()
        {
            if (ModelState.IsValid)
            {
                Microsoft.AspNetCore.Identity.SignInResult result = await signInManager.PasswordSignInAsync(UserName, Password, false, false);
                if (result.Succeeded)
                {
                    return Redirect(ReturnUrl ?? "/");
                }
                ModelState.AddModelError("", "Invalid username or password");
            }
            return Page();
        }

    }
}